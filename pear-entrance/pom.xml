<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--依赖项目-->
    <parent>
        <groupId>com.lsh.boke</groupId>
        <artifactId>boke-index-admin</artifactId>
        <version>${revision}</version>
    </parent>

    <!-- 仓库信息 -->
    <artifactId>pear-entrance</artifactId>

    <!-- 项目信息 -->
    <name>启动模块</name>

    <!-- 依赖管理 -->
    <dependencies>
        <!-- 代 码 生 成 -->
        <!--<dependency>
            <groupId>com.lsh.boke</groupId>
            <artifactId>pear-generate</artifactId>
        </dependency>-->
        <!-- 系 统 业 务 -->
        <dependency>
            <groupId>com.lsh.boke</groupId>
            <artifactId>pear-system</artifactId>
        </dependency>
        <!-- 定 时 任 务 -->
        <!--<dependency>
            <groupId>com.lsh.boke</groupId>
            <artifactId>pear-schedule</artifactId>
            &lt;!&ndash;<exclusions>
                <exclusion>
                    <artifactId>mybatis</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
            </exclusions>&ndash;&gt;
        </dependency>-->
        <!-- 工 作 流 程 -->
        <!--<dependency>
            <groupId>com.lsh.boke</groupId>
            <artifactId>pear-process</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>mybatis</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <!-- 三方依赖 -->
       <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>-->
        <!-- Web 模块 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 模 板 引 擎 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- 数 据 库 操 作 框 架 -->
        <!--<dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>-->
        <!-- 分 页 组 件 -->
        <!--<dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jsqlparser</artifactId>
                    <groupId>com.github.jsqlparser</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mybatis-spring</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <!-- Spring Boot 监控 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- My Sql 连接工具 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- 验证码 -->
        <dependency>
            <groupId>com.github.whvcse</groupId>
            <artifactId>easy-captcha</artifactId>
        </dependency>
        <!-- service 模 块 -->
        <!--<dependency>
            <groupId>com.lsh.boke</groupId>
            <artifactId>boke-service</artifactId>
        </dependency>-->
        <!-- 权限标签 -->
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
        </dependency>
        <!-- 动态数据源 -->
        <!--<dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
        </dependency>-->
        <!-- yaml 解析 -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
    </dependencies>

    <!-- 构建工具 -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--                <version> 2.5.4</version>-->
            </plugin>
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compilerPlugin.version}</version>
            </plugin>-->
            <!--打包jar-->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    &lt;!&ndash;不打包资源文件&ndash;&gt;
                    &lt;!&ndash;<excludes>&ndash;&gt;
                    &lt;!&ndash;<exclude>*.**</exclude>&ndash;&gt;
                    &lt;!&ndash;<exclude>*/*.xml</exclude>&ndash;&gt;
                    &lt;!&ndash;</excludes>&ndash;&gt;
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            &lt;!&ndash;MANIFEST.MF 中 Class-Path 加入前缀&ndash;&gt;
                            <classpathPrefix>lib/</classpathPrefix>
                            &lt;!&ndash;jar包不包含唯一版本标识&ndash;&gt;
                            <useUniqueVersions>false</useUniqueVersions>
                            &lt;!&ndash;指定入口类&ndash;&gt;
                            <mainClass>com.lll.boke.MybokeApplication</mainClass>
                        </manifest>
                        &lt;!&ndash;<manifestEntries>&ndash;&gt;
                        &lt;!&ndash;&lt;!&ndash;MANIFEST.MF 中 Class-Path 加入资源文件目录&ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;<Class-Path>./resources/</Class-Path>&ndash;&gt;
                        &lt;!&ndash;</manifestEntries>&ndash;&gt;
                    </archive>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>-->

            <!--拷贝依赖 copy-dependencies-->
            <!--也可以执行mvn copy-dependencies 命令打包依赖-->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib/
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!--spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot 的jar包-->
            <!--<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    &lt;!&ndash;重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖&ndash;&gt;
                    <includes>
                        <include>
                            <groupId>null</groupId>
                            <artifactId>null</artifactId>
                        </include>
                    </includes>
                    <layout>ZIP</layout>
                    &lt;!&ndash;使用外部配置文件，jar包里没有资源文件&ndash;&gt;
                    <addResources>true</addResources>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            &lt;!&ndash;配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar &ndash;&gt;
                            &lt;!&ndash;配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar &ndash;&gt;
                            &lt;!&ndash;<classifier>run</classifier>&ndash;&gt;
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>
</project>